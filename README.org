* py-isort.el

[[https://travis-ci.org/paetzke/py-isort.el][https://travis-ci.org/paetzke/py-isort.el.svg?branch=master]]
[[http://melpa.org/#/py-isort][http://melpa.org/packages/py-isort-badge.svg]]

Provides commands, which use the external =isort= tool to tidy up the imports in the current buffer.

Install =isort= and download =py-isort=

#+BEGIN_SRC bash
$ pip install isort
$ wget https://raw.githubusercontent.com/paetzke/py-isort.el/master/py-isort.el \
       -O /your/path/py-isort.el
#+END_SRC

You can also install =py-isort= with /MELPA/:

#+BEGIN_SRC lisp
M-x package-install RET
py-isort RET
#+END_SRC

Add the =before-save-hook= to your =~/.emacs=

#+BEGIN_SRC lisp
(add-to-list 'load-path "/your/path/")
(require 'py-isort)
(add-hook 'before-save-hook 'py-isort-before-save)
#+END_SRC

Now every time you save your Python file =isort= will be executed on the current buffer.

To customize the behaviour of =isort= you can set the =py-isort-options= e.g.

#+BEGIN_SRC lisp
(setq py-isort-options '("--lines=100"))
#+END_SRC


** Functions

- =M-x py-isort-buffer RET=: Uses the =isort= tool to reformat the current buffer.
- =M-x py-isort-region RET=: Uses the =isort= tool to reformat the current region.
- =M-x py-isort-add-import RET=: Asks for a module that should be added to the
  current buffer. (With =import module.name=)
- =M-x py-isort-add-from-import RET=: Asks for a module and module item that
  should be added to the current buffer. (With =from module import item=)
- =M-x py-isort-remove-import RET=: Asks for a module that should be removed from
  the current buffer, without having to be concerned with how it was originally
  formatted.
- =M-x py-isort-add-import-region=: Import a module from region.

  Import modules from region and then delete the region. If you have
  `whole-line-or-region' installed it may be useful to define a function like:

  #+BEGIN_SRC elisp
  (defun py-isort-add-import-whole-line-or-region ()
    "Import module(s) from region or whole line."
    (interactive)
    (whole-line-or-region-call-with-region 'py-isort-add-import-region))
  #+END_SRC

  Then you can just type your import (with working autocomplete) wherever you
  are in your code, call this function and the import will be properly sorted to
  your normal python imports.


** Bugs and improvements

Feel free to open tickets or send pull requests with improvements.
These [[https://github.com/paetzke/py-isort.el/graphs/contributors][contributors]] have done so.
